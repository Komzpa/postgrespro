\set VERBOSITY terse
CREATE EXTENSION pg_pathman;
CREATE SCHEMA callbacks;
/* Check callbacks */
CREATE TABLE callbacks.log(id serial, message text);
CREATE OR REPLACE FUNCTION callbacks.abc_on_part_created_range_callback(
	args JSONB)
RETURNS VOID AS $$
DECLARE
	start_value	TEXT := args->>'start';
	end_value	TEXT := args->'end';
BEGIN
	INSERT INTO callbacks.log(message)
	VALUES (start_value || '-' || end_value);
END
$$ language plpgsql;
CREATE OR REPLACE FUNCTION callbacks.abc_on_part_created_hash_callback(
	args JSONB)
RETURNS VOID AS $$
BEGIN
	RAISE WARNING 'callback: partition %', args->'partition';
END
$$ language plpgsql;
/* set callback to be called on RANGE partitions */
CREATE TABLE callbacks.abc(a serial, b int);
SELECT create_range_partitions('callbacks.abc', 'a', 1, 100, 2);
NOTICE:  sequence "abc_seq" does not exist, skipping
 create_range_partitions 
-------------------------
                       2
(1 row)

SELECT set_part_init_callback('callbacks.abc',
							  'callbacks.abc_on_part_created_range_callback');
 set_part_init_callback 
------------------------
 
(1 row)

INSERT INTO callbacks.abc VALUES (123, 1);
INSERT INTO callbacks.abc VALUES (223, 1);
SELECT append_range_partition('callbacks.abc');
 append_range_partition 
------------------------
 callbacks.abc_4
(1 row)

SELECT prepend_range_partition('callbacks.abc');
 prepend_range_partition 
-------------------------
 callbacks.abc_5
(1 row)

SELECT add_range_partition('callbacks.abc', 401, 502);
 add_range_partition 
---------------------
 callbacks.abc_6
(1 row)

SELECT message FROM callbacks.log ORDER BY id;
  message  
-----------
 201-"301"
 301-"401"
 -99-"1"
 401-"502"
(4 rows)

SELECT drop_partitions('callbacks.abc');
NOTICE:  function callbacks.abc_upd_trig_func() does not exist, skipping
NOTICE:  0 rows copied from callbacks.abc_1
NOTICE:  1 rows copied from callbacks.abc_2
NOTICE:  1 rows copied from callbacks.abc_3
NOTICE:  0 rows copied from callbacks.abc_4
NOTICE:  0 rows copied from callbacks.abc_5
NOTICE:  0 rows copied from callbacks.abc_6
 drop_partitions 
-----------------
               6
(1 row)

/* set callback to be called on HASH partitions */
SELECT set_part_init_callback('callbacks.abc',
							  'callbacks.abc_on_part_created_hash_callback');
 set_part_init_callback 
------------------------
 
(1 row)

SELECT create_hash_partitions('callbacks.abc', 'a', 5);
WARNING:  callback: partition "abc_0"
WARNING:  callback: partition "abc_1"
WARNING:  callback: partition "abc_2"
WARNING:  callback: partition "abc_3"
WARNING:  callback: partition "abc_4"
 create_hash_partitions 
------------------------
                      5
(1 row)

DROP SCHEMA callbacks CASCADE;
NOTICE:  drop cascades to 10 other objects
DROP EXTENSION pg_pathman CASCADE;
